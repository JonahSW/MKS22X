/*
	int[] test1 = new int[]{0,2,4};
	int[] test2 = new int[]{1,3,5};
	System.out.println(Arrays.toString(merge(test1, test2)));
	
	test1 = new int[]{0,2,4,6,8};
	test2 = new int[]{1,3,5,7,9};
	System.out.println(Arrays.toString(merge(test1, test2)));

	test1 = new int[]{-2,-1,1,2,3,4,4,4,6,7,9,10};
	test2 = new int[]{1,2,12,111,119};
	System.out.println(Arrays.toString(merge(test1, test2)));

	test1 = new int[]{-4,-2,0,10,60,82};
	test2 = new int[]{0,1,3,9};
	System.out.println(Arrays.toString(merge(test1, test2)));
	
	test1 = new int[]{8};
	test2 = new int[]{9};
	System.out.println(Arrays.toString(merge(test1, test2)));

	test1 = new int[]{8};
	test2 = new int[]{-3,1,5,7,9};
	System.out.println(Arrays.toString(merge(test1, test2)));

	test1 = new int[]{-234,-23,-2,1,3,4,4,5,7,7,8,9,10};
	test2 = new int[]{-1,3,5,7,9,23,42};
	System.out.println(Arrays.toString(merge(test1, test2)));
	//*/

	int[] test1 = new int[]{8,3,9,2,0,4,7,1,5,6};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));
	wait(250);

	test1 = new int[]{5,3,2,4,1};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));
	wait(250);
	
	test1 = new int[]{5,3,2,4,1,3,4,24,23,4,324,32,4,324,324,32,4,32,43,-324,4,0,45,0,76,67,4,56,-234,95348,50,3,-854,85,-10034,105,8485,4,38,5,50,45,3405,0};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));
	wait(250);
	
	test1 = new int[]{};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));
	wait(250);
	
	test1 = new int[]{5};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));
	wait(250);
	
	test1 = new int[]{5,3};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));
	wait(250);
	
	test1 = new int[]{1,2,3,4,5};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));
	wait(250);
	
	test1 = new int[]{456,4,3,667,4,5,6,76,-34,-34,76,78,0,898,7654,5,9,876,543,356,789,8765,43,4567,8,654,5,678,978,65,6543,-65,0,987,65,67,908,897,65,67,0,-9,8765,5,67,-890,9,876,5,67,80,908,7};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));
	wait(250);
	
	test1 = new int[]{5,4,3,2,1};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));
	wait(250);
	
	test1 = new int[]{-1,-3,5,4,3,2,-5,0,-2,1,-4};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));
	wait(250);
	
	test1 = new int[]{5,3,2,4,1,0,-3,-4,-5,-1,-2};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));

		int[] test1 = new int[]{8,3,9,2,0,4,7,1,5,6};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));

	test1 = new int[]{5,3,2,4,1};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));
	
	test1 = new int[]{5,3,2,4,1,3,4,24,23,4,324,32,4,324,324,32,4,32,43,-324,4,0,45,0,76,67,4,56,-234,95348,50,3,-854,85,-10034,105,8485,4,38,5,50,45,3405,0};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));
	
	test1 = new int[]{};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));
	
	test1 = new int[]{5};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));
	
	test1 = new int[]{5,3};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));
	
	test1 = new int[]{1,2,3,4,5};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));
	
	test1 = new int[]{456,4,3,667,4,5,6,76,-34,-34,76,78,0,898,7654,5,9,876,543,356,789,8765,43,4567,8,654,5,678,978,65,6543,-65,0,987,65,67,908,897,65,67,0,-9,8765,5,67,-890,9,876,5,67,80,908,7};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));
	
	test1 = new int[]{5,4,3,2,1};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));
	
	test1 = new int[]{-1,-3,5,4,3,2,-5,0,-2,1,-4};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));
	
	test1 = new int[]{5,3,2,4,1,0,-3,-4,-5,-1,-2};
	System.out.println("Output = " + Arrays.toString(mergeSort(test1)));

	//------------------------------------------
	int[] test2 = new int[1000];
	Random r = new Random();

	for (int i = 0; i < test2.length; i++) {
	    test2[i] = r.nextInt();
	}
	mergeSort(test1);
	System.out.println("________________________________________________");
	test2 = new int[100000];

	for (int i = 0; i < test2.length; i++) {
	    test2[i] = r.nextInt();
	}
	mergeSort(test1);
	System.out.println("________________________________________________");
	test2 = new int[1000000];

	for (int i = 0; i < test2.length; i++) {
	    test2[i] = r.nextInt();
	}
	mergeSort(test1);
	System.out.println("________________________________________________");
	test2 = new int[10000000];

	for (int i = 0; i < test2.length; i++) {
	    test2[i] = r.nextInt();
	}
	mergeSort(test1);
	System.out.println("________________________________________________");
	//test2 = new int[100000000];

	for (int i = 0; i < test2.length; i++) {
	    test2[i] = r.nextInt();
	}
	mergeSort(test1);
	System.out.println("________________________________________________");	
	//test2 = new int[500000000];

	for (int i = 0; i < test2.length; i++) {
	    test2[i] = r.nextInt();
	}
	mergeSort(test1);
	System.out.println("________________________________________________");